1/1: Building CaseBlock (CaseBlock.idr)
Main> Main.foo : (x : Nat) -> (case x of { Z => Nat -> Nat ; S k => Nat })
Main> Prelude.elem : Eq a => a -> List a -> Bool
elem x [] = False
elem x (y :: ys) = if x == y then True else elem x ys
Main> PrimIO.io_bind : (1 act : JVM_IO a) -> (1 k : (a -> JVM_IO b)) -> JVM_IO b
io_bind (MkJVM_IO fn) = \1 k => MkJVM_IO (\1 w => (case fn w of { MkIORes x' w' => case k x' of { MkJVM_IO res => res w' } }))
Main> Bye for now!
